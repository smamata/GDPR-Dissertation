/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ConsentOptimized,
  ConsentOptimizedInterface,
} from "../ConsentOptimized";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usersProcessed",
        type: "uint256",
      },
    ],
    name: "AccessBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "consented",
        type: "bool",
      },
    ],
    name: "ConsentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usersProcessed",
        type: "uint256",
      },
    ],
    name: "DeletionBatch",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchRecordAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "batchRecordDeletion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "bool",
        name: "consent",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "accessCount",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "deletionCount",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "consented",
        type: "bool",
      },
    ],
    name: "setConsent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063416ae7681461005157806345893e1a146100c0578063b707f371146100d5578063d781c28a146100e8575b600080fd5b61009861005f3660046102cf565b6001600160a01b031660009081526020819052604090205460ff81169163ffffffff620100008304811692660100000000000090041690565b60408051931515845263ffffffff928316602085015291169082015260600160405180910390f35b6100d36100ce3660046102ff565b6100fb565b005b6100d36100e3366004610374565b6101c3565b6100d36100f63660046102ff565b610218565b8060005b8181101561018757600080600086868581811061011e5761011e610396565b905060200201602081019061013391906102cf565b6001600160a01b031681526020810191909152604001600020805469ffffffff000000000000198116600166010000000000009283900463ffffffff908116820116909202179091559190910190506100ff565b5060405181815233907f057410e10a69e55d5fdf9980396ae81aea89e4ad210d9d8139c03210014ea36c906020015b60405180910390a2505050565b3360008181526020818152604091829020805460ff19168515159081178255925192835292917f7bdbd5ff3d003672492455cc5133da0a6ac7f911054f30d5f423443f90418c71910160405180910390a25050565b8060005b8181101561029c57600080600086868581811061023b5761023b610396565b905060200201602081019061025091906102cf565b6001600160a01b031681526020810191909152604001600020805465ffffffff00001981166001620100009283900463ffffffff9081168201169092021790915591909101905061021c565b5060405181815233907f0ff16a81aafc2fac1e6c20717d6b236df75f041f590dcc4e5a4b9ec30b8a8bf1906020016101b6565b6000602082840312156102e157600080fd5b81356001600160a01b03811681146102f857600080fd5b9392505050565b6000806020838503121561031257600080fd5b823567ffffffffffffffff8082111561032a57600080fd5b818501915085601f83011261033e57600080fd5b81358181111561034d57600080fd5b8660208260051b850101111561036257600080fd5b60209290920196919550909350505050565b60006020828403121561038657600080fd5b813580151581146102f857600080fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bf9afd21e2b122fd3f7e84f4b383f083f856f06cb2ce951ca3a0101f7428442c64736f6c63430008180033";

type ConsentOptimizedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsentOptimizedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsentOptimized__factory extends ContractFactory {
  constructor(...args: ConsentOptimizedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConsentOptimized & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConsentOptimized__factory {
    return super.connect(runner) as ConsentOptimized__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsentOptimizedInterface {
    return new Interface(_abi) as ConsentOptimizedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConsentOptimized {
    return new Contract(address, _abi, runner) as unknown as ConsentOptimized;
  }
}
